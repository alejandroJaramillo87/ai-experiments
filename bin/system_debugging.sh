#!/bin/bash

# System Debugging Commands Reference
# Comprehensive diagnostics for ext4 filesystem with commit=60 and nojournal setup
# Execute commands individually based on your debugging needs

echo "=== SYSTEM DEBUGGING COMMANDS REFERENCE ==="
echo "Execute these commands one at a time based on your investigation needs"
echo ""

# ===== SECTION 1: FILESYSTEM HEALTH AND INTEGRITY =====
echo "===== 1. FILESYSTEM HEALTH AND INTEGRITY ====="
echo ""
echo "Check Current Mount Options:"
echo "# Verify your current mount configuration"
echo "mount | grep -E \"(ext4|data)\""
echo "cat /proc/mounts | grep -E \"(ext4|data)\""
echo ""
echo "# Check fstab configuration"
echo "cat /etc/fstab"
echo ""
echo "# Verify nojournal and commit settings are active (replace sdXY with your partition)"
echo "tune2fs -l /dev/sdXY | grep -E \"(Journal|features)\""
echo ""

echo "Force Filesystem Check:"
echo "# First, identify your data partition"
echo "lsblk -f"
echo ""
echo "# For mounted filesystem (read-only check, replace sdXY with your partition):"
echo "sudo fsck -n /dev/sdXY"
echo ""
echo "# For unmounted filesystem (more thorough, replace paths with yours):"
echo "sudo umount /path/to/data/mount"
echo "sudo fsck -f /dev/sdXY"
echo "sudo mount /dev/sdXY /path/to/data/mount"
echo ""

echo "Check for Filesystem Errors:"
echo "# Look for recent filesystem errors"
echo "sudo dmesg | grep -i \"ext4\\|filesystem\\|journal\""
echo "sudo journalctl -k | grep -i \"ext4\\|filesystem\""
echo ""
echo "# Check for bad blocks (replace sdXY with your partition)"
echo "sudo badblocks -sv /dev/sdXY"
echo ""

# ===== SECTION 2: SYSTEM STABILITY MONITORING =====
echo "===== 2. SYSTEM STABILITY MONITORING ====="
echo ""
echo "Memory and Process Health:"
echo "# Check for memory corruption or issues"
echo "sudo cat /proc/meminfo"
echo "free -h"
echo "sudo dmesg | grep -i \"memory\\|oom\\|segfault\""
echo ""
echo "# Monitor for process crashes"
echo "sudo journalctl --since \"1 hour ago\" | grep -i \"killed\\|crash\\|segfault\""
echo ""
echo "# Check core dumps"
echo "ls -la /var/crash/"
echo "sudo coredumpctl list"
echo ""

echo "Session Management Diagnostics:"
echo "# Check current session status"
echo "loginctl show-session \$(loginctl | grep \$(whoami) | awk '{print \$1}')"
echo "systemctl --user status"
echo ""
echo "# Look for failed user services"
echo "systemctl --user --failed"
echo "systemctl --user --state=failed"
echo ""
echo "# Check for recent authentication issues"
echo "sudo tail -100 /var/log/auth.log | grep -i \"session\\|pam\\|gdm\""
echo ""

# ===== SECTION 3: GRAPHICS AND DISPLAY STABILITY =====
echo "===== 3. GRAPHICS AND DISPLAY STABILITY ====="
echo ""
echo "GPU and Driver Status:"
echo "# Check graphics driver status"
echo "sudo dmesg | grep -i \"gpu\\|drm\\|nvidia\\|amd\\|intel\""
echo "lspci | grep -i vga"
echo "glxinfo | head -20"
echo ""
echo "# For NVIDIA users:"
echo "nvidia-smi"
echo "sudo nvidia-smi -q -d PERFORMANCE"
echo ""
echo "# Check for graphics memory issues"
echo "sudo cat /sys/kernel/debug/dri/0/i915_gem_objects  # Intel"
echo "# Or check /proc/driver/nvidia/gpus/*/information    # NVIDIA"
echo ""

echo "Wayland/X11 Session Health:"
echo "# Check current session type"
echo "echo \$XDG_SESSION_TYPE"
echo "echo \$WAYLAND_DISPLAY"
echo "echo \$DISPLAY"
echo ""
echo "# Monitor for compositor crashes"
echo "sudo journalctl -u gdm3 --since \"1 hour ago\""
echo "journalctl --user-unit=gnome-session-manager --since \"1 hour ago\""
echo ""

# ===== SECTION 4: DISK I/O AND PERFORMANCE MONITORING =====
echo "===== 4. DISK I/O AND PERFORMANCE MONITORING ====="
echo ""
echo "Install Monitoring Tools (if needed):"
echo "sudo apt install iotop sysstat"
echo ""
echo "Monitor Real-time I/O:"
echo "# Monitor real-time I/O (Critical for nojournal setup)"
echo "sudo iotop -o"
echo ""
echo "# Check I/O statistics"
echo "iostat -x 1 5"
echo ""
echo "# Monitor disk usage patterns"
echo "sudo iotop -P -d 1"
echo ""
echo "# Check for I/O errors"
echo "sudo dmesg | grep -i \"i/o\\|disk\\|ata\\|scsi\""
echo ""

echo "Validate commit=60 Behavior:"
echo "# Monitor dirty pages and writeback (CRITICAL for nojournal)"
echo "watch -n 1 'cat /proc/meminfo | grep -E \"Dirty|Writeback\"'"
echo ""
echo "# Check vm dirty settings"
echo "sysctl vm.dirty_writeback_centisecs"
echo "sysctl vm.dirty_expire_centisecs"
echo "sysctl vm.dirty_ratio"
echo ""
echo "# Monitor actual commit intervals"
echo "sudo trace-cmd record -e ext4:ext4_sync_fs sleep 120"
echo "sudo trace-cmd report"
echo ""

# ===== SECTION 5: SYSTEM RESOURCE MONITORING =====
echo "===== 5. SYSTEM RESOURCE MONITORING ====="
echo ""
echo "Comprehensive Resource Check:"
echo "# CPU usage and load"
echo "uptime"
echo "cat /proc/loadavg"
echo "top -bn1 | head -20"
echo ""
echo "# Temperature monitoring"
echo "sensors  # Install with: sudo apt install lm-sensors"
echo "sudo sensors-detect  # If first time"
echo ""
echo "# Check for thermal throttling"
echo "sudo dmesg | grep -i \"thermal\\|temperature\\|throttle\""
echo ""

echo "Network and Connectivity:"
echo "# Check network stability"
echo "ping -c 4 8.8.8.8"
echo "ss -tuln"
echo "systemctl status networking"
echo ""

# ===== SECTION 6: CRITICAL DATA PROTECTION MEASURES =====
echo "===== 6. CRITICAL DATA PROTECTION MEASURES (nojournal setup) ====="
echo ""
echo "Implement Additional Safety Measures:"
echo "# Set up automatic filesystem checks (replace sdXY with your partition)"
echo "sudo tune2fs -c 30 /dev/sdXY  # Force check every 30 mounts"
echo "sudo tune2fs -i 7d /dev/sdXY  # Force check every 7 days"
echo ""
echo "# Create monitoring script for dirty pages"
echo "cat << 'EOF' > ~/monitor_dirty.sh"
echo "#!/bin/bash"
echo "while true; do"
echo "    dirty=\$(grep \"^Dirty:\" /proc/meminfo | awk '{print \$2}')"
echo "    if [ \$dirty -gt 500000 ]; then  # 500MB threshold"
echo "        echo \"\$(date): High dirty pages: \${dirty}KB\" >> ~/dirty_monitor.log"
echo "    fi"
echo "    sleep 30"
echo "done"
echo "EOF"
echo "chmod +x ~/monitor_dirty.sh"
echo ""

echo "Configure System for Better Crash Recovery:"
echo "# Enable persistent journal"
echo "sudo mkdir -p /var/log/journal"
echo "sudo systemctl restart systemd-journald"
echo ""
echo "# Configure kernel crash dumps"
echo "echo 'kernel.core_pattern = /var/crash/core-%e-%p-%t' | sudo tee -a /etc/sysctl.conf"
echo ""
echo "# Set up automatic backup sync (critical for nojournal)"
echo "# Add to crontab:"
echo "# */10 * * * * sync && echo 3 > /proc/sys/vm/drop_caches"
echo ""

# ===== SECTION 7: PERFORMANCE BENCHMARKING =====
echo "===== 7. PERFORMANCE BENCHMARKING ====="
echo ""
echo "Baseline Performance Tests:"
echo "# Disk performance test (replace sdXY with your partition)"
echo "sudo hdparm -t /dev/sdXY"
echo "sudo dd if=/dev/zero of=/tmp/test bs=1M count=1000; sync; rm /tmp/test"
echo ""
echo "# Memory test"
echo "sudo memtester 1000M 1"
echo ""
echo "# CPU stress test"
echo "stress --cpu 4 --timeout 60s"
echo ""

# ===== SECTION 8: ONGOING MONITORING SETUP =====
echo "===== 8. ONGOING MONITORING SETUP ====="
echo ""
echo "Install Monitoring Tools:"
echo "sudo apt install htop iotop nmon"
echo ""
echo "Create System Health Check Script:"
echo "cat << 'EOF' > ~/system_health.sh"
echo "#!/bin/bash"
echo "echo \"=== System Health Check \$(date) ===\""
echo "echo \"Load: \$(uptime | cut -d',' -f3-)\""
echo "echo \"Memory: \$(free -h | grep '^Mem:' | awk '{print \$3\"/\"\$2}')\""
echo "echo \"Disk: \$(df -h / | tail -1 | awk '{print \$3\"/\"\$2\" (\"\$5\")\"}')\"" 
echo "echo \"Dirty Pages: \$(grep \"^Dirty:\" /proc/meminfo | awk '{print \$2}') KB\""
echo "echo \"Filesystem errors: \$(dmesg | grep -i \"ext4.*error\" | wc -l)\""
echo "echo \"Recent crashes: \$(journalctl --since \"1 hour ago\" | grep -i \"segfault\\|killed\" | wc -l)\""
echo "echo \"===============================================\""
echo "EOF"
echo "chmod +x ~/system_health.sh"
echo ""

echo "Set Up Alerts for Critical Issues:"
echo "# Add to crontab for regular monitoring"
echo "(crontab -l 2>/dev/null; echo \"*/5 * * * * ~/system_health.sh >> ~/health.log\") | crontab -"
echo ""
echo "# Create alert for high dirty pages"
echo "(crontab -l 2>/dev/null; echo \"* * * * * [ \\\$(grep '^Dirty:' /proc/meminfo | awk '{print \\\$2}') -gt 1000000 ] && echo 'HIGH DIRTY PAGES' | wall\") | crontab -"
echo ""

# ===== SECTION 9: IMMEDIATE ACTION ITEMS =====
echo "===== 9. IMMEDIATE ACTION ITEMS ====="
echo ""
echo "Priority Tasks:"
echo "1. Run filesystem check (most critical)"
echo "2. Monitor dirty pages for next few hours"
echo "3. Check system logs for any recent errors"
echo "4. Verify backup systems are working (crucial with nojournal)"
echo "5. Test a controlled reboot to ensure clean startup"
echo ""

# ===== SECTION 10: WARNING SIGNS TO WATCH FOR =====
echo "===== 10. WARNING SIGNS TO WATCH FOR (nojournal setup) ====="
echo ""
echo "Immediately investigate if you see:"
echo "- Dirty pages consistently above 1GB"
echo "- Any ext4 errors in dmesg"
echo "- Unexpected system slowdowns"
echo "- File corruption reports"
echo "- Applications crashing frequently"
echo ""
echo "Commands to check these warnings:"
echo "# Check dirty pages"
echo "grep \"^Dirty:\" /proc/meminfo"
echo ""
echo "# Check for ext4 errors"
echo "dmesg | grep -i \"ext4.*error\""
echo ""
echo "# Check for recent crashes"
echo "journalctl --since \"1 hour ago\" | grep -i \"crash\\|segfault\\|killed\""
echo ""
echo "# Monitor system load"
echo "uptime"
echo "top -bn1 | head -10"
echo ""

echo "=========================="
echo "USAGE NOTES:"
echo "=========================="
echo "- Execute commands individually based on your debugging needs"
echo "- Replace 'sdXY' with your actual partition (e.g., sda1, nvme0n1p2)"
echo "- Replace '/path/to/data/mount' with your actual mount point"
echo "- Pay special attention to filesystem integrity tests"
echo "- Monitor I/O patterns closely due to nojournal configuration"
echo "- Set up regular monitoring scripts for ongoing health checks"
echo "- Always have current backups before making changes"