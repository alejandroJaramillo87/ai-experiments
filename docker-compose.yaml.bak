version: '3.9'

services:
  # GPU Model Service - Single high-performance model
  gpu-model-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.gpu
    container_name: ai-gpu-service
    restart: unless-stopped
    environment:
      - CUDA_VISIBLE_DEVICES=0
      - MODEL_PATH=/app/models/gguf/gpu-model
      - SERVER_PORT=8000
      - MAX_CONTEXT_LENGTH=32768
      - GPU_MEMORY_FRACTION=0.95
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - /mnt/ai-data/models:/app/models:ro
      - ./logs/gpu:/app/logs
      - type: tmpfs
        target: /app/tmp
        tmpfs:
          size: 2g
    networks:
      - ai-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 32G
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=1g
      - /app/tmp:noexec,nosuid,size=2g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # CPU Model Service 1 - Generic inference service
  cpu-model-service-1:
    build:
      context: .
      dockerfile: Dockerfile.cpu
    container_name: ai-cpu-service-1
    restart: unless-stopped
    environment:
      - MODEL_PATH=/app/models/gguf/cpu-model-1
      - SERVER_PORT=8001
      - OMP_NUM_THREADS=8
      - MAX_CONTEXT_LENGTH=8192
    ports:
      - "127.0.0.1:8001:8001"
    volumes:
      - /mnt/ai-data/models:/app/models:ro
      - ./logs/cpu-1:/app/logs
      - type: tmpfs
        target: /app/tmp
        tmpfs:
          size: 1g
    networks:
      - ai-network
    deploy:
      resources:
        limits:
          memory: 24G
          cpus: '8'
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=512m
      - /app/tmp:noexec,nosuid,size=1g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # CPU Model Service 2 - Generic inference service
  cpu-model-service-2:
    build:
      context: .
      dockerfile: Dockerfile.cpu
    container_name: ai-cpu-service-2
    restart: unless-stopped
    environment:
      - MODEL_PATH=/app/models/gguf/cpu-model-2
      - SERVER_PORT=8002
      - OMP_NUM_THREADS=6
      - MAX_CONTEXT_LENGTH=4096
    ports:
      - "127.0.0.1:8002:8002"
    volumes:
      - /mnt/ai-data/models:/app/models:ro
      - ./logs/cpu-2:/app/logs
      - type: tmpfs
        target: /app/tmp
        tmpfs:
          size: 1g
    networks:
      - ai-network
    deploy:
      resources:
        limits:
          memory: 16G
          cpus: '6'
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=512m
      - /app/tmp:noexec,nosuid,size=1g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # CPU Model Service 3 - Generic inference service
  cpu-model-service-3:
    build:
      context: .
      dockerfile: Dockerfile.cpu
    container_name: ai-cpu-service-3
    restart: unless-stopped
    environment:
      - MODEL_PATH=/app/models/gguf/cpu-model-3
      - SERVER_PORT=8003
      - OMP_NUM_THREADS=4
      - MAX_CONTEXT_LENGTH=2048
    ports:
      - "127.0.0.1:8003:8003"
    volumes:
      - /mnt/ai-data/models:/app/models:ro
      - ./logs/cpu-3:/app/logs
      - type: tmpfs
        target: /app/tmp
        tmpfs:
          size: 1g
    networks:
      - ai-network
    deploy:
      resources:
        limits:
          memory: 12G
          cpus: '4'
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=512m
      - /app/tmp:noexec,nosuid,size=1g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - 3000:8080

    volumes:
      - open-webui-data-cpu:/app/backend/data
    restart: always
    environment:
      - OLLAMA_BASE_URL=http://ollama-cpu:11434
    depends_on:
      - gpu-model-service


networks:
  ai-network:
    driver: bridge
    internal: true
    ipam:
      config:
        - subnet: 172.20.0.0/16